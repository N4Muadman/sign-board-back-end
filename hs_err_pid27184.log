#
# There is insufficient memory for the Java Runtime Environment to continue.
# Native memory allocation (malloc) failed to allocate 32744 bytes for ChunkPool::allocate
# Possible reasons:
#   The system is out of physical RAM or swap space
#   The process is running with CompressedOops enabled, and the Java Heap may be blocking the growth of the native heap
# Possible solutions:
#   Reduce memory load on the system
#   Increase physical memory or swap space
#   Check if swap backing store is full
#   Decrease Java heap size (-Xmx/-Xms)
#   Decrease number of Java threads
#   Decrease Java thread stack sizes (-Xss)
#   Set larger code cache with -XX:ReservedCodeCacheSize=
#
#  , tid=3296# JRE version: Java(TM) SE Runtime Environment (17.0.10+11) (build 17.0.10+11-LTS-240)
# Java VM: Java HotSpot(TM) 64-Bit Server VM (17.0.10+11-LTS-240, mixed mode, tiered, compressed oops, compressed class ptrs, g1 gc, windows-amd64)
# No core dump will be written. Minidumps are not enabled by default on client versions of Windows
#

---------------  S U M M A R Y ------------

Command Line: -Dclassworlds.conf=D:\application\ProgramingTools\Library\apache-maven\apache-maven-3.9.9-bin\apache-maven-3.9.9\bin\m2.conf -Dmaven.home=D:\application\ProgramingTools\Library\apache-maven\apache-maven-3.9.9-bin\apache-maven-3.9.9 -Dlibrary.jansi.path=D:\application\ProgramingTools\Library\apache-maven\apache-maven-3.9.9-bin\apache-maven-3.9.9\lib\jansi-native -Dmaven.multiModuleProjectDirectory=D:\workspace\java\DiLam\sign-board-back-end org.codehaus.plexus.classworlds.launcher.Launcher spring::run

Host: 12th Gen Intel(R) Core(TM) i7-12700H, 20 cores, 23G,  Windows 11 , 64 bit Build 26100 (10.0.26100.3775)
Time: Tue May  6 09:32:58 2025 SE Asia Standard Time elapsed time: 20.524635 seconds (0d 0h 0m 20s)

---------------  T H R E A D  ---------------

Current thread (0x000001a73626acb0):  JavaThread "C1 CompilerThread1" daemon [_thread_in_native, id=3296, stack(0x00000059d0600000,0x00000059d0700000)]


Current CompileTask:
C1:  20524  480       3       java.net.URLStreamHandler::parseURL (1201 bytes)

Stack: [0x00000059d0600000,0x00000059d0700000]
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [jvm.dll+0x677a5a]
V  [jvm.dll+0x7d8b2d]
V  [jvm.dll+0x7da48e]
V  [jvm.dll+0x7daaf3]
V  [jvm.dll+0x2455ff]
V  [jvm.dll+0xaad50]
V  [jvm.dll+0xab09c]
V  [jvm.dll+0x1817e2]
V  [jvm.dll+0x149d7b]
V  [jvm.dll+0x134538]
V  [jvm.dll+0x1346c0]
V  [jvm.dll+0x134988]
V  [jvm.dll+0x133e21]
V  [jvm.dll+0x135abd]
V  [jvm.dll+0x226aeb]
V  [jvm.dll+0x224cab]
V  [jvm.dll+0x78e45c]
V  [jvm.dll+0x78888a]
